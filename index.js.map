{"version":3,"file":"index.js","sources":["../src/js/cookies.js","../src/js/swiper-custom.js","../src/js/join-our-community.js","../src/js/feedback.js"],"sourcesContent":["import iziToast from 'izitoast';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const cookiesWindow = document.querySelector('.cookies-window');\n  const acceptButton = document.getElementById('acceptCookies');\n  const declineButton = document.getElementById('declineCookies');\n\n  const userConsent = localStorage.getItem('cookieConsent');\n\n  if (userConsent) {\n    cookiesWindow.style.display = 'none';\n  } else {\n    cookiesWindow.style.display = 'block';\n  }\n\n  function hideCookieWindow() {\n    cookiesWindow.style.opacity = '0';\n    cookiesWindow.style.visibility = 'hidden';\n    setTimeout(() => {\n      cookiesWindow.style.display = 'none';\n    }, 500);\n  }\n\n  function showToast(message, type = 'info') {\n    let backgroundColor = '#007bff';\n    let messageColor = '#fff';\n\n    if (type === 'accept') {\n      backgroundColor = '#000';\n      messageColor = '#fff';\n    } else if (type === 'decline') {\n      backgroundColor = '#d9d9d9';\n      messageColor = '#000';\n    } else if (type === 'success') {\n      backgroundColor = '#4CAF50';\n    } else if (type === 'error') {\n      backgroundColor = '#f44336';\n    }\n\n    iziToast.show({\n      message: message,\n      position: 'bottomCenter',\n      backgroundColor: backgroundColor,\n      messageColor: messageColor,\n      timeout: 3000,\n      progressBar: false,\n    });\n  }\n\n  acceptButton.addEventListener('click', () => {\n    localStorage.setItem('cookieConsent', 'accepted');\n    hideCookieWindow();\n    showToast('You accepted using cookies.', 'accept');\n  });\n\n  declineButton.addEventListener('click', () => {\n    localStorage.setItem('cookieConsent', 'declined');\n    hideCookieWindow();\n    showToast('You declined using cookies.', 'decline');\n  });\n});\n","import Swiper from 'swiper/bundle';\nimport 'swiper/css/bundle';\n\n/**\n * Initializes a Swiper instance for a given HTML element.\n *\n * @param {string} selector - The CSS selector for the Swiper container (e.g., '.mySwiper').\n * @param {object} [options={}] - Custom Swiper options to override or extend the default ones.\n * @param {string} [nextElSelector=''] - The CSS selector for the 'Next' navigation button.\n * @param {string} [prevElSelector=''] - The CSS selector for the 'Previous' navigation button.\n * @returns {Swiper} The initialized Swiper instance.\n */\nexport function initializeSwiper(\n  selector,\n  options = {},\n  nextElSelector = '',\n  prevElSelector = ''\n) {\n  // Define the default configuration for Swiper.\n  // These options will apply unless explicitly overridden by the 'options' parameter\n  // or by breakpoint-specific settings.\n  const defaultOptions = {\n    direction: 'horizontal', // Default direction is horizontal\n    slidesPerView: 1, // Default number of slides visible at once\n    spaceBetween: 0, // Default space between slides\n    loop: false, // Default loop mode is off\n\n    // Default navigation elements. These will be overridden if specific selectors are provided.\n    navigation: {\n      nextEl: nextElSelector,\n      prevEl: prevElSelector,\n    },\n\n    // Breakpoint-specific configurations.\n    // Swiper will apply these settings when the viewport width matches.\n    breakpoints: {\n      // Configuration for mobile and smaller screens (0px to 1199px)\n      0: {\n        enabled: true, // Swiper is active on these screens\n        slidesPerView: 1, // Show one slide\n        spaceBetween: 35, // 35px space between slides\n        loop: true, // Loop mode is enabled for mobile\n      },\n      // Configuration for desktop screens (1200px and wider)\n      1200: {\n        enabled: false, // Swiper is disabled on desktop, allowing CSS to control layout\n        slidesPerView: 2, // (These don't apply when enabled: false, but keep for clarity/future use)\n        spaceBetween: 152, // (These don't apply when enabled: false)\n        loop: false, // Loop mode is disabled for desktop\n      },\n    },\n  };\n\n  // Merge default options with any custom options provided.\n  // Custom options will override default ones if there are conflicts.\n  const mergedOptions = { ...defaultOptions, ...options };\n\n  // If navigation selectors are provided, ensure they are correctly set in the merged options.\n  // This handles cases where only one of nextElSelector or prevElSelector might be provided.\n  if (nextElSelector || prevElSelector) {\n    mergedOptions.navigation = {\n      nextEl: nextElSelector || defaultOptions.navigation.nextEl,\n      prevEl: prevElSelector || defaultOptions.navigation.prevEl,\n    };\n  } else {\n    // If no navigation selectors are provided, remove the navigation object\n    // to prevent Swiper from looking for non-existent buttons.\n    delete mergedOptions.navigation;\n  }\n\n  // Initialize and return the Swiper instance.\n  return new Swiper(selector, mergedOptions);\n}\n","import { initializeSwiper } from './swiper-custom.js';\n\nconst joinCommunitySwiper = initializeSwiper(\n  '.join-our-community-cards',\n  {},\n  '.join-button.swiper-button-next',\n  '.join-button.swiper-button-prev'\n);\n","import { initializeSwiper } from './swiper-custom.js';\n\nconst feedbackSwiper = initializeSwiper(\n  '.feedback-swipe-block',\n  {\n    breakpoints: {\n      0: {\n        enabled: true,\n        direction: 'horizontal',\n        slidesPerView: 1,\n        spaceBetween: 36,\n        loop: true,\n        centeredSlides: true,\n      },\n      1200: {\n        enabled: true,\n        direction: 'vertical',\n        slidesPerView: 3,\n        spaceBetween: 16,\n        loop: true,\n        centeredSlides: false,\n      },\n    },\n  },\n  '.feedback-button.swiper-button-next',\n  '.feedback-button.swiper-button-prev'\n);\n"],"names":["cookiesWindow","acceptButton","declineButton","hideCookieWindow","showToast","message","type","backgroundColor","messageColor","iziToast","initializeSwiper","selector","options","nextElSelector","prevElSelector","defaultOptions","mergedOptions","Swiper"],"mappings":"iyBAEA,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,MAAMA,EAAgB,SAAS,cAAc,iBAAiB,EACxDC,EAAe,SAAS,eAAe,eAAe,EACtDC,EAAgB,SAAS,eAAe,gBAAgB,EAE1C,aAAa,QAAQ,eAAe,EAGtDF,EAAc,MAAM,QAAU,OAE9BA,EAAc,MAAM,QAAU,QAGhC,SAASG,GAAmB,CAC1BH,EAAc,MAAM,QAAU,IAC9BA,EAAc,MAAM,WAAa,SACjC,WAAW,IAAM,CACfA,EAAc,MAAM,QAAU,MACpC,EAAO,GAAG,CACV,CAEE,SAASI,EAAUC,EAASC,EAAO,OAAQ,CACzC,IAAIC,EAAkB,UAClBC,EAAe,OAEfF,IAAS,UACXC,EAAkB,OAClBC,EAAe,QACNF,IAAS,WAClBC,EAAkB,UAClBC,EAAe,QACNF,IAAS,UAClBC,EAAkB,UACTD,IAAS,UAClBC,EAAkB,WAGpBE,EAAS,KAAK,CACZ,QAASJ,EACT,SAAU,eACV,gBAAiBE,EACjB,aAAcC,EACd,QAAS,IACT,YAAa,EACnB,CAAK,CACL,CAEEP,EAAa,iBAAiB,QAAS,IAAM,CAC3C,aAAa,QAAQ,gBAAiB,UAAU,EAChDE,EAAgB,EAChBC,EAAU,8BAA+B,QAAQ,CACrD,CAAG,EAEDF,EAAc,iBAAiB,QAAS,IAAM,CAC5C,aAAa,QAAQ,gBAAiB,UAAU,EAChDC,EAAgB,EAChBC,EAAU,8BAA+B,SAAS,CACtD,CAAG,CACH,CAAC,EChDM,SAASM,EACdC,EACAC,EAAU,CAAA,EACVC,EAAiB,GACjBC,EAAiB,GACjB,CAIA,MAAMC,EAAiB,CACrB,UAAW,aACX,cAAe,EACf,aAAc,EACd,KAAM,GAGN,WAAY,CACV,OAAQF,EACR,OAAQC,CACd,EAII,YAAa,CAEX,EAAG,CACD,QAAS,GACT,cAAe,EACf,aAAc,GACd,KAAM,EACd,EAEM,KAAM,CACJ,QAAS,GACT,cAAe,EACf,aAAc,IACd,KAAM,EACd,CACA,CACA,EAIQE,EAAgB,CAAE,GAAGD,EAAgB,GAAGH,CAAO,EAIrD,OAAIC,GAAkBC,EACpBE,EAAc,WAAa,CACzB,OAAQH,GAAkBE,EAAe,WAAW,OACpD,OAAQD,GAAkBC,EAAe,WAAW,MAC1D,EAII,OAAOC,EAAc,WAIhB,IAAIC,EAAON,EAAUK,CAAa,CAC3C,CCtE4BN,EAC1B,4BACA,CAAA,EACA,kCACA,iCACF,ECLuBA,EACrB,wBACA,CACE,YAAa,CACX,EAAG,CACD,QAAS,GACT,UAAW,aACX,cAAe,EACf,aAAc,GACd,KAAM,GACN,eAAgB,EACxB,EACM,KAAM,CACJ,QAAS,GACT,UAAW,WACX,cAAe,EACf,aAAc,GACd,KAAM,GACN,eAAgB,EACxB,CACA,CACA,EACE,sCACA,qCACF"}